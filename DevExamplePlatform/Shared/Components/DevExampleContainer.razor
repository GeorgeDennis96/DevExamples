@inherits ComponentBase

<div class="container content-fixed mr-auto p-10 fluid-width @GetAlignment() @GetDebug() @CustomClass" style="width:@Width; height:@Height; @GetPadding()" @onmouseover="ToggleDebugRender" @onmouseout="ToggleDebugRender">

    @ChildContent

</div>

@code{

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public string Width { get; set; } = "";

    [Parameter]
    public string Height { get; set; } = "";

    [Parameter]
    public string Padding { get; set; }

    [Parameter]
    public Alignment Align { get; set; } = Alignment.Center;

    [Parameter]
    public bool Debug { get; set; } = false;

    [Parameter]
    public string CustomClass { get; set; }

    private bool renderDebug = false;

    private string GetAlignment()
    {
        switch (Align)
        {
            case Alignment.Left:
                return "float-left";
                break;
            case Alignment.Center:
                return "float-none text-center";
                break;
            case Alignment.Right:
                return "float-right";
                break;

        }
        return "";
    }

    private void ToggleDebugRender()
    {
        if (Debug)
            renderDebug = !renderDebug;
    }

    private string GetDebug()
    {
        if (Debug)
        {
            if (renderDebug)
            {
                return "shadow-lg";
            }
            return "shadow-base";
        }

        return "";
    }

    private string GetPadding()
    {
        if (Padding != null)
        {
            return "Padding: " + Padding;
        }

        return "Padding: 20";
    }

    public enum Alignment
    {
        Center,
        Left,
        Right

    }
}
